// first npm install body-parser --save

To run server from a cmd prompt: java index.js   
   
   Theory of operation:
   Server udp broadcasts its own address
   
   Client stores server ipaddress 
   
   Server broadcasts command on port 3001: 
      attach 192.168.0.151 (this is server's ip address)
      
   Client executes code: 
      import ftplib
      serverAddress = '192.168.0.151'
      sftp = ftplib.FTP(serverAddress,'root','raspberry')
      
   Server broadcasts command on port 3001: 
      cwd newDirectory
      
   Client execute code:
      sftp.cwd("pythonprogs")
   
   Server broadcasts command on port 3001:
      retr filename 
      
   Client executes code: 
      gFile = open (filename, 'wb')
      sftp.retrbinary("RETR distancemeasurement",gFile.write)
      
   Server broadcasts command on port 3001:
      quit
      
   Client execute code:
      sftp.quit()
      
      
   Normal operation:
      0) http://location:3000/content 
            Causes the server to create a dynamic page based on matching date/time events, and then 
            sending this page to the client.
   
      1) http://localhost:3000/config
            allows user to add (need delete?) a date/time event
            After config is complete, server issues command (io.emit ('chat message', 'request content') ) 
            This causes client to set location.href='http://localhost:3000/content'
            The server will then provide the page: content.html
            
      2) Each minute
            The server will check the time if there is a match on startTime.  If there is a match it will
            io.emit ('chat message', 'request content').  
            This will cause the client to set location.href=http://localhost:3000/content' 
